@page "/users/create"
@using Microsoft.EntityFrameworkCore
@using BlazorMarkedsplads.Models
@inject IDbContextFactory<BlazorMarkedsplads.OtakuMarketDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>User</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label> 
                <InputText id="username" @bind-Value="User.Username" class="form-control" /> 
                <ValidationMessage For="() => User.Username" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="User.Email" class="form-control" /> 
                <ValidationMessage For="() => User.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="passwordhash" class="form-label">PasswordHash:</label> 
                <InputText id="passwordhash" @bind-Value="User.PasswordHash" class="form-control" /> 
                <ValidationMessage For="() => User.PasswordHash" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="joindate" class="form-label">JoinDate:</label> 
                <InputDate id="joindate" @bind-Value="User.JoinDate" class="form-control" /> 
                <ValidationMessage For="() => User.JoinDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="balance" class="form-label">Balance:</label> 
                <InputNumber id="balance" @bind-Value="User.Balance" class="form-control" /> 
                <ValidationMessage For="() => User.Balance" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="role" class="form-label">Role:</label> 
                <InputText id="role" @bind-Value="User.Role" class="form-control" /> 
                <ValidationMessage For="() => User.Role" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private User User { get; set; } = new()
    {
        Username = string.Empty,
        Email = string.Empty,
        PasswordHash = string.Empty
    };

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Add(User);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
